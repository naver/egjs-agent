{"version":3,"file":"agent.cjs.js","sources":["../src/utils.ts","../src/presets.ts","../src/userAgent.ts","../src/userAgentData.ts","../src/agent.ts","../src/index.umd.ts"],"sourcesContent":["import { PresetInfo, PresetResult, NavigatorUABrandVersion } from \"./types\";\n\nexport function some<T>(arr: T[], callback: (value: T, index: number) => any): boolean {\n    const length = arr.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (callback(arr[i], i)) {\n            return true;\n        }\n    }\n\n    return false;\n}\nexport function find<T>(arr: T[], callback: (value: T, index: number) => any): T | null {\n    const length = arr.length;\n\n    for (let i = 0; i < length; ++i) {\n        if (callback(arr[i], i)) {\n            return arr[i];\n        }\n    }\n    return null;\n}\nexport function getUserAgentString(agent?: string): string {\n    let userAgent = agent;\n    if (typeof userAgent === \"undefined\") {\n        if (typeof navigator === \"undefined\" || !navigator) {\n            return \"\";\n        }\n\n        userAgent = navigator.userAgent || \"\";\n    }\n    return userAgent!.toLowerCase();\n}\nexport function execRegExp(pattern: string, text: string): RegExpExecArray | null {\n    try {\n        return new RegExp(pattern, \"g\").exec(text);\n    } catch (e) {\n        return null;\n    }\n}\nexport function hasUserAgentData(): boolean {\n    if (typeof navigator === \"undefined\" || !navigator || !navigator.userAgentData) {\n        return false;\n    }\n    const userAgentData = navigator.userAgentData;\n    const brands = (userAgentData.brands || userAgentData.uaList);\n\n    return !!(brands && brands.length);\n}\nexport function findVersion(versionTest: string, userAgent: string): string {\n    const result = execRegExp(`(${versionTest})((?:\\\\/|\\\\s|:)([0-9|\\\\.|_]+))`, userAgent);\n\n    return result ? result[3] : \"\";\n}\nexport function convertVersion(text: string): string {\n    return text.replace(/_/g, \".\");\n}\nexport function findPreset(presets: PresetInfo[], userAgent: string): PresetResult {\n    let userPreset: PresetInfo | null = null;\n    let version = \"-1\";\n\n    some(presets, preset => {\n        const result = execRegExp(`(${preset.test})((?:\\\\/|\\\\s|:)([0-9|\\\\.|_]+))?`, userAgent);\n\n        if (!result || preset.brand) {\n            return false;\n        }\n        userPreset = preset;\n        version = result[3] || \"-1\";\n\n        if (preset.versionAlias) {\n            version = preset.versionAlias;\n        } else if (preset.versionTest) {\n            version = findVersion(preset.versionTest.toLowerCase(), userAgent) || version;\n        }\n        version = convertVersion(version);\n        return true;\n    });\n\n    return {\n        preset: userPreset,\n        version,\n    };\n}\nexport function findPresetBrand(presets: PresetInfo[], brands: NavigatorUABrandVersion[]): NavigatorUABrandVersion {\n    const brandInfo = {\n        brand: \"\",\n        version: \"-1\",\n    };\n    some(presets, preset => {\n        const result = findBrand(brands, preset);\n\n        if (!result) {\n            return false;\n        }\n\n        brandInfo.brand = preset.id;\n        brandInfo.version = preset.versionAlias || result.version;\n\n        return brandInfo.version !== \"-1\";\n    });\n\n    return brandInfo;\n}\nexport function findBrand(brands: NavigatorUABrandVersion[], preset: PresetInfo): NavigatorUABrandVersion | null {\n    return find(brands, ({ brand }) => {\n        return execRegExp(`${preset.test}`, brand.toLowerCase());\n    });\n}\n","import { PresetInfo } from \"./types\";\n\nexport const BROWSER_PRESETS: PresetInfo[] = [\n    {\n        test: \"phantomjs\",\n        id: \"phantomjs\",\n    },\n    {\n        test: \"whale\",\n        id: \"whale\",\n    }, {\n        test: \"edgios|edge|edg\",\n        id: \"edge\",\n    },\n    {\n        test: \"msie|trident|windows phone\",\n        id: \"ie\",\n        versionTest: \"iemobile|msie|rv\",\n    },\n    {\n        test: \"miuibrowser\",\n        id: \"miui browser\",\n    },\n    {\n        test: \"samsungbrowser\",\n        id: \"samsung internet\",\n    },\n    {\n        test: \"samsung\",\n        id: \"samsung internet\",\n        versionTest: \"version\",\n    },\n    {\n        test: \"chrome|crios\",\n        id: \"chrome\",\n    },\n    {\n        test: \"firefox|fxios\",\n        id: \"firefox\",\n    },\n    {\n        test: \"android\",\n        id: \"android browser\",\n        versionTest: \"version\",\n    },\n    {\n        test: \"safari|iphone|ipad|ipod\",\n        id: \"safari\",\n        versionTest: \"version\",\n    },\n];\n\n// chromium's engine(blink) is based on applewebkit 537.36.\nexport const CHROMIUM_PRESETS: PresetInfo[] = [\n    {\n        test: \"(?=.*applewebkit/(53[0-7]|5[0-2]|[0-4]))(?=.*\\\\schrome)\",\n        id: \"chrome\",\n        versionTest: \"chrome\",\n    },\n    {\n        test: \"chromium\",\n        id: \"chrome\",\n    },\n    {\n        test: \"whale\",\n        id: \"chrome\",\n        versionAlias: \"-1\",\n        brand: true,\n    },\n];\nexport const WEBKIT_PRESETS: PresetInfo[] = [\n    {\n        test: \"applewebkit\",\n        id: \"webkit\",\n        versionTest: \"applewebkit|safari\",\n    },\n];\nexport const WEBVIEW_PRESETS: PresetInfo[] = [\n    {\n        test: \"(?=(iphone|ipad))(?!(.*version))\",\n        id: \"webview\",\n    },\n    {\n        test: \"(?=(android|iphone|ipad))(?=.*(naver|daum|; wv))\",\n        id: \"webview\",\n    },\n    {\n        // test webview\n        test: \"webview\",\n        id: \"webview\",\n    },\n];\nexport const OS_PRESETS: PresetInfo[] = [\n    {\n        test: \"windows phone\",\n        id: \"windows phone\",\n    },\n    {\n        test: \"windows 2000\",\n        id: \"window\",\n        versionAlias: \"5.0\",\n    },\n    {\n        test: \"windows nt\",\n        id: \"window\",\n    },\n    {\n        test: \"win32|windows\",\n        id: \"window\",\n    },\n    {\n        test: \"iphone|ipad|ipod\",\n        id: \"ios\",\n        versionTest: \"iphone os|cpu os\",\n    },\n    {\n        test: \"macos|macintel|mac os x\",\n        id: \"mac\",\n    },\n    {\n        test: \"android|linux armv81\",\n        id: \"android\",\n    },\n    {\n        test: \"tizen\",\n        id: \"tizen\",\n    },\n    {\n        test: \"webos|web0s\",\n        id: \"webos\",\n    },\n    // {\n    //     test: \"linux|ubuntu|debian\",\n    //     id: \"linux\",\n    //     versionAlias: \"-1\",\n    // },\n];\n","import { AgentInfo } from \"./types\";\nimport { getUserAgentString, findPreset } from \"./utils\";\nimport { WEBVIEW_PRESETS, CHROMIUM_PRESETS, BROWSER_PRESETS, OS_PRESETS, WEBKIT_PRESETS } from \"./presets\";\n\nexport function isWebView(userAgent: string): boolean {\n    return !!findPreset(WEBVIEW_PRESETS, userAgent).preset;\n}\n\nexport function getLegacyAgent(userAgent?: string): AgentInfo {\n    const nextAgent = getUserAgentString(userAgent);\n    const isMobile = !!/mobi/g.exec(nextAgent);\n    const browser = {\n        name: \"unknown\",\n        version: \"-1\",\n        majorVersion: -1,\n        webview: isWebView(nextAgent),\n        chromium: false,\n        chromiumVersion: \"-1\",\n        webkit: false,\n        webkitVersion: \"-1\",\n    };\n    const os = {\n        name: \"unknown\",\n        version: \"-1\",\n        majorVersion: -1,\n    };\n    const {\n        preset: browserPreset,\n        version: browserVersion,\n    } = findPreset(BROWSER_PRESETS, nextAgent);\n\n    const {\n        preset: osPreset,\n        version: osVersion,\n    } = findPreset(OS_PRESETS, nextAgent);\n\n    const chromiumPreset = findPreset(CHROMIUM_PRESETS, nextAgent);\n\n    browser.chromium = !!chromiumPreset.preset;\n    browser.chromiumVersion = chromiumPreset.version;\n    if (!browser.chromium) {\n        const webkitPreset = findPreset(WEBKIT_PRESETS, nextAgent);\n\n        browser.webkit = !!webkitPreset.preset;\n        browser.webkitVersion = webkitPreset.version;\n    }\n\n    if (osPreset) {\n        os.name = osPreset.id;\n        os.version = osVersion;\n        os.majorVersion = parseInt(osVersion, 10);\n    }\n    if (browserPreset) {\n        browser.name = browserPreset.id;\n        browser.version = browserVersion;\n\n        // Early whale bugs\n        if (browser.webview && os.name === \"ios\" && browser.name !== \"safari\") {\n            browser.webview = false;\n        }\n    }\n    browser.majorVersion = parseInt(browser.version, 10);\n\n    return {\n        browser,\n        os,\n        isMobile,\n        isHints: false,\n    };\n}\n","import { UADataValues, AgentInfo, AgentBrowserInfo, AgentOSInfo } from \"./types\";\nimport { some, find, findBrand, convertVersion, findPresetBrand, getUserAgentString } from \"./utils\";\nimport { BROWSER_PRESETS, OS_PRESETS, CHROMIUM_PRESETS, WEBKIT_PRESETS, WEBVIEW_PRESETS } from \"./presets\";\nimport { isWebView } from \"./userAgent\";\n\nexport function getClientHintsAgent(osData?: UADataValues): AgentInfo {\n    const userAgentData = navigator.userAgentData;\n    const brands = [...(userAgentData.uaList || userAgentData.brands)!];\n    const fullVersionList = osData && osData.fullVersionList;\n    const isMobile = userAgentData.mobile || false;\n    const firstBrand = brands[0];\n    const platform = (osData && osData.platform || userAgentData.platform || navigator.platform).toLowerCase();\n    const browser: AgentBrowserInfo = {\n        name: firstBrand.brand,\n        version: firstBrand.version,\n        majorVersion: -1,\n        webkit: false,\n        webkitVersion: \"-1\",\n        chromium: false,\n        chromiumVersion: \"-1\",\n        webview: !!findPresetBrand(WEBVIEW_PRESETS, brands).brand || isWebView(getUserAgentString()),\n    };\n    const os: AgentOSInfo = {\n        name: \"unknown\",\n        version: \"-1\",\n        majorVersion: -1,\n    };\n    browser.webkit = !browser.chromium && some(WEBKIT_PRESETS, preset => findBrand(brands, preset));\n\n    const chromiumBrand = findPresetBrand(CHROMIUM_PRESETS, brands);\n\n    browser.chromium = !!chromiumBrand.brand;\n    browser.chromiumVersion = chromiumBrand.version;\n    if (!browser.chromium) {\n        const webkitBrand = findPresetBrand(WEBKIT_PRESETS, brands);\n\n        browser.webkit = !!webkitBrand.brand;\n        browser.webkitVersion = webkitBrand.version;\n    }\n\n    const platfomResult = find(OS_PRESETS, preset => {\n        return new RegExp(`${preset.test}`, \"g\").exec(platform);\n    });\n    os.name = platfomResult ? platfomResult.id : \"\";\n\n    if (osData) {\n        os.version = osData.platformVersion;\n    }\n    if (fullVersionList && fullVersionList.length) {\n        const browserBrandByFullVersionList = findPresetBrand(BROWSER_PRESETS, fullVersionList);\n\n        browser.name = browserBrandByFullVersionList.brand || browser.name;\n        browser.version = browserBrandByFullVersionList.version || browser.version;\n    } else {\n        const browserBrand = findPresetBrand(BROWSER_PRESETS, brands);\n\n        browser.name = browserBrand.brand || browser.name;\n        browser.version = browserBrand.brand && osData ? osData.uaFullVersion : browserBrand.version;\n    }\n    if (browser.webkit) {\n        os.name = isMobile ? \"ios\" : \"mac\";\n    }\n    if (os.name === \"ios\" && browser.webview) {\n        browser.version = \"-1\";\n    }\n\n    os.version = convertVersion(os.version);\n    browser.version = convertVersion(browser.version);\n    os.majorVersion = parseInt(os.version, 10);\n    browser.majorVersion = parseInt(browser.version, 10);\n\n    return {\n        browser,\n        os,\n        isMobile,\n        isHints: true,\n    };\n}\n","import { AgentInfo } from \"./types\";\nimport { hasUserAgentData } from \"./utils\";\nimport { getClientHintsAgent } from \"./userAgentData\";\nimport { getLegacyAgent } from \"./userAgent\";\n\n/**\n * @namespace eg.agent\n */\n\n/**\n* Extracts accuate browser and operating system information from the user agent string or client hints.\n* @ko 유저 에이전트 문자열 또는 client hints에서 정확한 브라우저와 운영체제 정보를 추출한다.\n* @function eg.agent#getAccurateAgent\n* @param - Callback function to get the accuate agent <ko>정확한 에이전트를 가져오기 위한 callback 함수</ko>\n* @return - get the accuate agent promise. If Promise are not supported, null is returned. <ko> 정확한 에이전트 promise를 가져온다. Promise를 지원 하지 않는 경우, null을 반환한다. </ko>\n* @example\nimport { getAccurateAgent } from \"@egjs/agent\";\n// eg.agent.getAccurateAgent()\ngetAccurateAgent().then(agent => {\n   const { os, browser, isMobile } = agent;\n});\ngetAccurateAgent(agent => {\n    const { os, browser, isMobile } = agent;\n});\n*/\nexport function getAccurateAgent(callback?: (result: AgentInfo) => void): Promise<AgentInfo> | null {\n    if (hasUserAgentData()) {\n        return navigator.userAgentData.getHighEntropyValues([\n            \"architecture\",\n            \"model\",\n            \"platform\",\n            \"platformVersion\",\n            \"uaFullVersion\",\n            \"fullVersionList\",\n        ]).then(info => {\n            const agentInfo = getClientHintsAgent(info);\n\n            callback && callback(agentInfo);\n            return agentInfo;\n        });\n    }\n    callback && callback(agent());\n    if (typeof Promise === \"undefined\" || !Promise) {\n        return null;\n    }\n    return Promise.resolve(agent());\n}\n\n\n\n/**\n * Extracts browser and operating system information from the user agent string.\n * @ko 유저 에이전트 문자열에서 브라우저와 운영체제 정보를 추출한다.\n * @function eg.agent#agent\n * @param - user agent string to parse <ko>파싱할 유저에이전트 문자열</ko>\n * @return - agent Info <ko> 에이전트 정보 </ko>\n * @example\nimport agent from \"@egjs/agent\";\n// eg.agent();\nconst { os, browser, isMobile } = agent();\n */\nfunction agent(userAgent?: string): AgentInfo {\n    if (typeof userAgent === \"undefined\" && hasUserAgentData()) {\n        return getClientHintsAgent();\n    } else {\n        return getLegacyAgent(userAgent);\n    }\n}\nexport { getLegacyAgent };\n\nexport default agent;\n\nexport * from \"./types\";\n","import agent, * as modules from \"./agent\";\n\nfor (const name in modules) {\n    (agent as any)[name] = (modules as any)[name];\n}\n\nexport default agent;\n"],"names":["some","arr","callback","length","i","find","getUserAgentString","agent","userAgent","navigator","toLowerCase","execRegExp","pattern","text","RegExp","exec","e","hasUserAgentData","userAgentData","brands","uaList","findVersion","versionTest","result","convertVersion","replace","findPreset","presets","userPreset","version","preset","test","brand","versionAlias","findPresetBrand","brandInfo","findBrand","id","_a","BROWSER_PRESETS","CHROMIUM_PRESETS","WEBKIT_PRESETS","WEBVIEW_PRESETS","OS_PRESETS","isWebView","getLegacyAgent","nextAgent","isMobile","browser","name","majorVersion","webview","chromium","chromiumVersion","webkit","webkitVersion","os","browserPreset","browserVersion","_b","osPreset","osVersion","chromiumPreset","webkitPreset","parseInt","isHints","getClientHintsAgent","osData","fullVersionList","mobile","firstBrand","platform","chromiumBrand","webkitBrand","platfomResult","platformVersion","browserBrandByFullVersionList","browserBrand","uaFullVersion","getAccurateAgent","getHighEntropyValues","then","info","agentInfo","Promise","resolve","modules"],"mappings":"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"}